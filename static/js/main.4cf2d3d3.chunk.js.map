{"version":3,"sources":["resume.pdf","components/About/About.js","components/Computer/Computer.js","components/SocialDrawer/SocialDrawer.js","components/Home/Home.js","components/Projects/Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","About","_this","this","react_default","a","createElement","className","onClick","props","changePage","Component","Computer","message","SocialDrawer","onMouseEnter","typeMessage","href","resume","target","rel","concat","Home","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","debounce","setState","interval","setInterval","characterToAdd","slice","substr","length","messageToType","state","clearInterval","typeMessageSocials","page","components_Computer_Computer","components_SocialDrawer_SocialDrawer","Projects","App","components_Home_Home","components_About_About","components_Projects_Projects","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4cf2d3d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.41b3e3a8.pdf\";","import React, { Component } from 'react'\n\nclass About extends Component {\n  render() {\n    return(\n      <div className=\"About\">\n        <h2>Hello from About!</h2>\n        <button onClick={() => this.props.changePage(\"home\")}>Go Back</button>\n      </div>\n    );\n  }\n}\n\nexport default About;","import React, { Component } from \"react\";\nimport \"./Computer.css\";\n\nclass Computer extends Component {\n  render() {\n    return (\n      <div className=\"Computer\">\n        <div className=\"Computer-display\">\n          <div className=\"Computer-display-screen\">\n            <h5 className=\"Computer-message Computer-message-user\">\n              visitor@timcarew.com\n            </h5>\n            <h5 className=\"Computer-message Computer-message-user-tildaetc\">\n              ~ $\n            </h5>\n            <h5 className=\"Computer-message\">{this.props.message}</h5>\n            <h5 className=\"Computer-cursor\">_</h5>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Computer;\n","import React, { Component } from \"react\";\nimport resume from \"../../resume.pdf\";\nimport \"./SocialDrawer.css\";\n\nclass SocialDrawer extends Component {\n  render() {\n    let browser = \"chrome\";\n    return (\n      <div className=\"SocialDrawer\">\n        <a\n          onMouseEnter={() =>\n            this.props.typeMessage('mail -s \"Nice Site!\" mail@timcarew.com')\n          }\n          href=\"mailto:mail@timcarew.com\"\n          className=\"SocialDrawer-link\"\n        >\n          Email\n        </a>\n        <a\n          onMouseEnter={() => this.props.typeMessage(\"open ./resume.pdf\")}\n          href={resume}\n          className=\"SocialDrawer-link\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Resume\n        </a>\n        <a\n          onMouseEnter={() =>\n            this.props.typeMessage(`${browser} https://timcarew.github.io`)\n          }\n          href=\"https://github.com/timcarew\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"SocialDrawer-link\"\n        >\n          GitHub\n        </a>\n        <h4 href=\"\" className=\"SocialDrawer-link SocialDrawer-link-static\">\n          @\n        </h4>\n      </div>\n    );\n  }\n}\n\nexport default SocialDrawer;\n","import React, { Component } from \"react\";\nimport Computer from \"../Computer/Computer\";\nimport SocialDrawer from \"../SocialDrawer/SocialDrawer\";\nimport { debounce } from \"debounce\";\nimport \"./Home.css\";\n\nimport resume from \"../../resume.pdf\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"Hello, World!\",\n      page: \"home\"\n    };\n  }\n\n  typeMessage = debounce(\n    message => {\n      // erase old message\n      this.setState({ message: \"\" });\n      // type new one\n      let interval = setInterval(() => {\n        // get first character\n        let characterToAdd = message.slice(0, 1);\n        // pop first character\n        message = message.substr(1, message.length);\n        if (message) {\n          let messageToType = this.state.message + characterToAdd;\n          this.setState({ message: messageToType });\n        } else {\n          let messageToType = this.state.message + characterToAdd;\n          this.setState({ message: messageToType });\n          clearInterval(interval);\n        }\n      }, 25);\n    },\n    750,\n    true\n  );\n\n  typeMessageSocials = debounce(\n    message => {\n      // erase old message\n      this.setState({ message: \"\" });\n      // type new one\n      let interval = setInterval(() => {\n        // get first character\n        let characterToAdd = message.slice(0, 1);\n        // pop first character\n        message = message.substr(1, message.length);\n        if (message) {\n          let messageToType = this.state.message + characterToAdd;\n          this.setState({ message: messageToType });\n        } else {\n          let messageToType = this.state.message + characterToAdd;\n          this.setState({ message: messageToType });\n          clearInterval(interval);\n        }\n      }, 10);\n    },\n    500,\n    false\n  );\n\n  render() {\n    return (\n      <div className=\"Home\">\n        <div className=\"Home-Main\">\n          <div className=\"Home-name\">\n            <div className=\"Home-name-text\">\n              <h2 className=\"Home-name-text-h2\">Tim Carew</h2>\n            </div>\n          </div>\n          <div className=\"Home-links-mobile\">\n            <a\n              href=\"https://www.github.com/timcarew\"\n              className=\"Home-links-mobile-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              GitHub\n            </a>\n            <br />\n            <a\n              href={resume}\n              className=\"Home-links-mobile-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Resume\n            </a>\n            <br />\n            <a\n              href=\"mailto:mail@timcarew.com\"\n              className=\"Home-links-mobile-link\"\n            >\n              Email\n            </a>\n          </div>\n          <div className=\"Home-Computer\">\n            {/* <h2 onMouseEnter={() => this.typeMessage(\"cd ./about\")} onClick={() => this.props.changePage(\"about\")} className=\"Home-Computer-link Home-Computer-about\">About Me</h2> */}\n            <Computer message={this.state.message} />\n            {/* <h2 onMouseEnter={() => this.typeMessage(\"cd ./projects\")} onClick={() => this.props.changePage(\"projects\")} className=\"Home-Computer-link Home-Computer-projects\">Projects</h2> */}\n          </div>\n          <div className=\"Home-links\">\n            <SocialDrawer typeMessage={this.typeMessageSocials} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react'\n\nclass Projects extends Component {\n  render() {\n    return(\n      <div className=\"Projects\">\n        <h2>Hello from Projects</h2>\n        <button onClick={() => this.props.changePage(\"home\")}>Go back</button>\n      </div>\n    );\n  }\n}\n\nexport default Projects;","import React, { Component } from \"react\";\nimport About from \"./components/About/About\";\nimport Home from \"./components/Home/Home\";\nimport Projects from \"./components/Projects/Projects\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: \"home\"\n    };\n  }\n  changePage = page => {\n    this.setState({ page: page });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.page === \"home\" ? (\n          <Home changePage={this.changePage} />\n        ) : this.state.page === \"about\" ? (\n          <About changePage={this.changePage} />\n        ) : this.state.page === \"projects\" ? (\n          <Projects changePage={this.changePage} />\n        ) : (\n          false\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}